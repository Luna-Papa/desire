"""
Django settings for desire project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
import time

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, BASE_DIR)
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'r+lyo)ct5g56$1js0#^ba$$3ru99e)ams(=(h4bxzh#o8+8&+@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    # 'jet',
    'simplepro',
    'simpleui',
    'import_export',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'datacloud',  # ETL可视化配置
    'infocenter',  # 工作中的一些信息展示
    'smart_selects',  # 用于外键字段关联过滤
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 加入simplepro的中间件
    'simplepro.middlewares.SimpleMiddleware'
]

ROOT_URLCONF = 'desire.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'desire.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'desire',
        'USER': 'desire',
        'PASSWORD': 'desire',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        "OPTIONS": {"init_command": "SET default_storage_engine=INNODB;"}

        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# 静态文件根目录目录
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

####################################################################
# 自定义变量 - 接口程序文件路径
INTERFACE_DIR = (
    os.path.join(BASE_DIR, 'apps', 'datacloud', 'interface')
)
####################################################################

# By default, smart_selects loads jQuery from Google’s CDN.
# However, it can use jQuery from Django’s admin area.
USE_DJANGO_JQUERY = True
JQUERY_URL = os.path.join(BASE_DIR, 'static', 'js', 'jquery.min.js')

####################################################################
# Simple UI Config
SIMPLEPRO_INFO = False
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False
SIMPLEUI_STATIC_OFFLINE = True
SIMPLEUI_ICON = {
    '任务分类': 'fa fa-cog',
    '数据同步': 'fas fa-fighter-jet',
    '数据推送': 'fas fa-share',
    '数据源': 'fa fa-database',
    '检测条件': 'fa fa-check-circle',
    '短信发送': 'fas fa-sms'
}
SIMPLEUI_LOGO = '/static/svg/logo.svg'

# 菜单展示配置
SIMPLEUI_CONFIG = {
    'system_keep': False,
    'menu_display': ['数据云配置', '用户管理', ],  # 开启排序和过滤功能, 不填此字段为默认排序和全部显示, 空列表[] 为全部不显示.
    'dynamic': True,  # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时动态展示菜单内容
    'menus': [
        {
            'app': 'datacloud',
            'name': '数据云配置',
            'icon': 'fas fa-feather-alt',
            'models': [
                {
                    'name': '数据源',
                    'icon': 'fa fa-database',
                    'url': 'datacloud/channelinfo/'
                },
                {
                    'name': '检测条件',
                    'icon': 'fa fa-check-circle',
                    'url': 'datacloud/chkinfo/'
                },
                {
                    'name': '数据同步',
                    'icon': 'fas fa-fighter-jet',
                    'url': 'datacloud/synctaskinfo/'
                },
                {
                    'name': '数据推送',
                    'icon': 'fas fa-share',
                    'url': 'datacloud/pushtaskinfo/'
                },
                {
                    'name': '任务分类',
                    'icon': 'fa fa-cog',
                    'url': 'datacloud/scriptconfig/'
                },
                {
                    'name': '短信发送',
                    'icon': 'fas fa-sms',
                    'url': 'datacloud/smssenderinfo/'
                },
            ]
        },
        {
            'app': 'auth',
            'name': '用户管理',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': '用户',
                    'icon': 'fa fa-user',
                    'url': 'auth/user/'
                },
                {
                    'name': '组',
                    'icon': 'fas fa-layer-group',
                    'url': 'auth/group/'
                },
            ]
        }
    ]
}

####################################################################
